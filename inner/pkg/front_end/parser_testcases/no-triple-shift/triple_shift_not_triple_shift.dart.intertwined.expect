parseUnit(extension)
  skipErrorTokens(extension)
  listener: beginCompilationUnit(extension)
  syntheticPreviousToken(extension)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, extension, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(, extension)
      parseExtension(extension)
        listener: beginExtensionDeclarationPrelude(extension)
        listener: handleNoTypeVariables(on)
        listener: beginExtensionDeclaration(extension, null)
        listener: handleIdentifier(Symbol, typeReference)
        listener: handleNoTypeArguments({)
        listener: handleType(Symbol, null)
        parseClassOrMixinOrExtensionBody(Symbol, DeclarationKind.Extension, null)
          listener: beginClassOrMixinBody(DeclarationKind.Extension, {)
          notEofOrValue(}, String)
          parseClassOrMixinOrExtensionMemberImpl({, DeclarationKind.Extension, null)
            parseMetadataStar({)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: beginMember()
            parseMethod({, null, null, null, null, null, null, {, Instance of 'SimpleType', null, operator, DeclarationKind.Extension, null, false)
              listener: beginMethod(null, null, null, null, null, operator)
              listener: handleIdentifier(String, typeReference)
              listener: handleNoTypeArguments(operator)
              listener: handleType(String, null)
              parseOperatorName(String)
                listener: handleOperatorName(operator, >)
              parseMethodTypeVar(>)
                listener: handleNoTypeVariables(()
              parseGetterOrFormalParameters(>, operator, false, MemberKind.ExtensionNonStaticMethod)
                parseFormalParameters(>, MemberKind.ExtensionNonStaticMethod)
                  parseFormalParametersRest((, MemberKind.ExtensionNonStaticMethod)
                    listener: beginFormalParameters((, MemberKind.ExtensionNonStaticMethod)
                    parseFormalParameter((, FormalParameterKind.mandatory, MemberKind.ExtensionNonStaticMethod)
                      parseMetadataStar(()
                        listener: beginMetadataStar(_)
                        listener: endMetadataStar(0)
                      listener: beginFormalParameter(_, MemberKind.ExtensionNonStaticMethod, null, null, null)
                      listener: handleNoType(()
                      ensureIdentifier((, formalParameterDeclaration)
                        listener: handleIdentifier(_, formalParameterDeclaration)
                      listener: handleFormalParameterWithoutValue())
                      listener: endFormalParameter(null, null, _, null, null, FormalParameterKind.mandatory, MemberKind.ExtensionNonStaticMethod)
                    listener: endFormalParameters(1, (, ), MemberKind.ExtensionNonStaticMethod)
              parseInitializersOpt())
                listener: handleNoInitializers()
              parseAsyncModifierOpt())
                listener: handleAsyncModifier(null, null)
                inPlainSync()
              inPlainSync()
              parseFunctionBody(), false, true)
                parseExpressionFunctionBody(=>, false)
                  parseExpression(=>)
                    parsePrecedenceExpression(=>, 1, true)
                      parseUnaryExpression(=>, true)
                        parsePrimary(=>, expression)
                          parseLiteralString(=>)
                            parseSingleLiteralString(=>)
                              listener: beginLiteralString("Greater Than used")
                              listener: endLiteralString(0, ;)
                  ensureSemicolon("Greater Than used")
                  listener: handleExpressionFunctionBody(=>, ;)
                  inGenerator()
              listener: endExtensionMethod(null, String, (, null, ;)
            listener: endMember()
          notEofOrValue(}, String)
          parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Extension, null)
            parseMetadataStar(;)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: beginMember()
            parseMethod(;, null, null, null, null, null, null, ;, Instance of 'SimpleType', null, call, DeclarationKind.Extension, null, false)
              listener: beginMethod(null, null, null, null, null, call)
              listener: handleIdentifier(String, typeReference)
              listener: handleNoTypeArguments(call)
              listener: handleType(String, null)
              ensureIdentifierPotentiallyRecovered(String, methodDeclaration, false)
                listener: handleIdentifier(call, methodDeclaration)
              parseQualifiedRestOpt(call, methodDeclarationContinuation)
              parseMethodTypeVar(call)
                listener: handleNoTypeVariables(()
              parseGetterOrFormalParameters(call, call, false, MemberKind.ExtensionNonStaticMethod)
                parseFormalParameters(call, MemberKind.ExtensionNonStaticMethod)
                  parseFormalParametersRest((, MemberKind.ExtensionNonStaticMethod)
                    listener: beginFormalParameters((, MemberKind.ExtensionNonStaticMethod)
                    parseFormalParameter((, FormalParameterKind.mandatory, MemberKind.ExtensionNonStaticMethod)
                      parseMetadataStar(()
                        listener: beginMetadataStar(_)
                        listener: endMetadataStar(0)
                      listener: beginFormalParameter(_, MemberKind.ExtensionNonStaticMethod, null, null, null)
                      listener: handleNoType(()
                      ensureIdentifier((, formalParameterDeclaration)
                        listener: handleIdentifier(_, formalParameterDeclaration)
                      listener: handleFormalParameterWithoutValue())
                      listener: endFormalParameter(null, null, _, null, null, FormalParameterKind.mandatory, MemberKind.ExtensionNonStaticMethod)
                    listener: endFormalParameters(1, (, ), MemberKind.ExtensionNonStaticMethod)
              parseInitializersOpt())
                listener: handleNoInitializers()
              parseAsyncModifierOpt())
                listener: handleAsyncModifier(null, null)
                inPlainSync()
              inPlainSync()
              parseFunctionBody(), false, true)
                parseExpressionFunctionBody(=>, false)
                  parseExpression(=>)
                    parsePrecedenceExpression(=>, 1, true)
                      parseUnaryExpression(=>, true)
                        parsePrimary(=>, expression)
                          parseLiteralString(=>)
                            parseSingleLiteralString(=>)
                              listener: beginLiteralString("Called")
                              listener: endLiteralString(0, ;)
                  ensureSemicolon("Called")
                  listener: handleExpressionFunctionBody(=>, ;)
                  inGenerator()
              listener: endExtensionMethod(null, String, (, null, ;)
            listener: endMember()
          notEofOrValue(}, })
          listener: endClassOrMixinBody(DeclarationKind.Extension, 2, {, })
        listener: endExtensionDeclaration(extension, null, on, })
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(}, null, }, Instance of 'VoidType', null, main, false)
        listener: beginTopLevelMethod(}, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, print)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, false)
                looksLikeLocalFunction(print)
                parseExpressionStatement({)
                  parseExpression({)
                    parsePrecedenceExpression({, 1, true)
                      parseUnaryExpression({, true)
                        parsePrimary({, expression)
                          parseSendOrFunctionLiteral({, expression)
                            looksLikeFunctionBody(;)
                            parseSend({, expression)
                              isNextIdentifier({)
                              ensureIdentifier({, expression)
                                listener: handleIdentifier(print, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(print)
                                parseArguments(print)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseLiteralSymbol(()
                                              listener: beginLiteralSymbol(#)
                                              listener: handleOperator(>>)
                                              listener: endLiteralSymbol(#, 1)
                                        listener: beginBinaryExpression(>)
                                        parsePrecedenceExpression(>, 9, true)
                                          parseUnaryExpression(>, true)
                                            parsePrimary(>, expression)
                                              parseParenthesizedExpressionOrFunctionLiteral(>)
                                                parseParenthesizedExpression(>)
                                                  parseExpressionInParenthesis(>)
                                                    parseExpressionInParenthesisRest(()
                                                      parseExpression(()
                                                        parsePrecedenceExpression((, 1, true)
                                                          parseUnaryExpression((, true)
                                                            parsePrimary((, expression)
                                                              parseLiteralInt(()
                                                                listener: handleLiteralInt(2)
                                                      ensureCloseParen(2, ()
                                                  listener: handleParenthesizedExpression(()
                                        listener: endBinaryExpression(>)
                                    listener: endArguments(1, (, ))
                              listener: handleSend(print, ;)
                  ensureSemicolon())
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(abstract)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(abstract)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, class, Instance of 'DirectiveContext')
      parseClassDeclarationModifiers(}, class)
        parseTopLevelKeywordModifiers(abstract, class)
      parseClassOrNamedMixinApplication(abstract, class)
        listener: beginClassOrNamedMixinApplicationPrelude(abstract)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(Foo, classOrMixinDeclaration)
        listener: handleNoTypeVariables(extends)
        listener: beginClassDeclaration(abstract, abstract, Foo)
        parseClass(Foo, abstract, class, Foo)
          parseClassHeaderOpt(Foo, abstract, class)
            parseClassExtendsOpt(Foo)
              parseClassExtendsSeenExtendsClause(extends, Foo)
                ensureIdentifier(extends, typeReference)
                  listener: handleIdentifier(List, typeReference)
                listener: beginTypeArguments(<)
                ensureIdentifier(<, typeReference)
                  listener: handleIdentifier(List, typeReference)
                listener: beginTypeArguments(<)
                listener: handleIdentifier(List, typeReference)
                listener: beginTypeArguments(<)
                listener: handleIdentifier(String, typeReference)
                listener: handleNoTypeArguments(>)
                listener: handleType(String, null)
                listener: endTypeArguments(1, <, >)
                listener: handleType(List, null)
                listener: endTypeArguments(1, <, >)
                listener: handleType(List, null)
                listener: endTypeArguments(1, <, >)
                listener: handleType(List, null)
                listener: handleClassExtends(extends, 1)
            parseWithClauseOpt(>)
              listener: handleClassNoWithClause()
            parseClassOrMixinImplementsOpt(>)
              listener: handleClassOrMixinImplements(null, 0)
            listener: handleClassHeader(abstract, class, null)
          parseClassOrMixinOrExtensionBody(>, DeclarationKind.Class, Foo)
            listener: beginClassOrMixinBody(DeclarationKind.Class, {)
            notEofOrValue(}, })
            listener: endClassOrMixinBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(abstract, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(extension)
  listener: endCompilationUnit(3, )
